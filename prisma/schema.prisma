generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String                 @id @default(uuid())
  name                  String
  email                 String                 @unique
  password              String
  role                  Role                   @default(USER)
  active                Boolean                @default(true)
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  financialTransactions FinancialTransaction[] @relation("UserFinancialTransactions")
  sales                 Sale[]
}

model Category {
  id          String     @id @default(uuid())
  name        String     @unique
  description String?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  parentId    String?
  parent      Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryHierarchy")
  products    Product[]

  @@map("categories")
}

model Product {
  id          String     @id @default(uuid())
  name        String
  price       Float
  cost        Float
  barcode     String?    @unique
  stock       Int        @default(0)
  description String?
  isActive    Boolean    @default(true)
  categoryId  String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  saleItems   SaleItem[]
  category    Category?  @relation(fields: [categoryId], references: [id])

  @@map("products")
}

model Sale {
  id        String        @id @default(uuid())
  total     Decimal       @db.Decimal(10, 2)
  payment   PaymentMethod
  discount  Decimal?      @db.Decimal(10, 2)
  tax       Decimal?      @db.Decimal(10, 2)
  createdAt DateTime      @default(now())
  userId    String
  user      User          @relation(fields: [userId], references: [id])
  items     SaleItem[]
}

model SaleItem {
  id        String  @id @default(uuid())
  saleId    String
  productId String
  quantity  Int
  price     Decimal @db.Decimal(10, 2)
  product   Product @relation(fields: [productId], references: [id])
  sale      Sale    @relation(fields: [saleId], references: [id])
}

model FinancialTransaction {
  id          String          @id @default(uuid())
  type        TransactionType
  amount      Decimal         @db.Decimal(10, 2)
  description String?
  createdAt   DateTime        @default(now())
  createdById String
  createdBy   User            @relation("UserFinancialTransactions", fields: [createdById], references: [id])
}

enum Role {
  ADMIN
  MODERATOR
  USER
}

enum PaymentMethod {
  CASH
  CARD
  PIX
  OTHER
}

enum TransactionType {
  ENTRY
  EXIT
  SANGRIA
  OTHER
}
